name: Release to TestPyPI

on:
  release:
    types: [published]

jobs:
  build_and_publish:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ] # ubuntu-latest,
        python-version: [ "3.11" ]
        include:
          - python-version: "3.11"
            cibw-version: "311"
#        python-version: [ "3.11", "3.12" ]
#        include:
#          - python-version: "3.11"
#            cibw-version: "311"
#          - python-version: "3.12"
#            cibw-version: "312"
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install cibuildwheel and tools
        run: |
          python -m pip install --upgrade cibuildwheel twine

      - name: Install build dependencies
        run: python -m pip install --upgrade setuptools wheel numpy cython

      - name: Build wheels with cibuildwheel for Python ${{ matrix.python-version }}
        env:
          CIBW_BUILD: cp${{ matrix.cibw-version }}-* #cp311-* cp312-*
          CIBW_OUTPUT_DIR: wheelhouse
          CIBW_BUILD_FRONTEND: build
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ARCHS_MACOS: universal2
        run: |
          python -m cibuildwheel --output-dir wheelhouse #--debug-traceback

      - name: Upload wheels to TestPyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TESTPYPI_PASSWORD }}
        run: |
          python -m twine upload --repository testpypi wheelhouse/*.whl
        # python -m twine upload --repository testpypi wheelhouse/*.whl --verbose

  build_installers:
    needs: build_and_publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install app from TestPyPI
        run: |
          pip install --upgrade pip
          pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ cy_py_test

      - name: Install PyInstaller
        run: pip install pyinstaller

      - name: Build executable with PyInstaller
        run: |
          cd packages
          pyinstaller -- clean cy_py_test.spec

      - name: Windows installer (NSIS)
        if: runner.os == 'Windows'
        run: |
          choco install nsis -y
          makensis packages/installer.nsi

      - name: macOS installer (DMG)
        if: runner.os == 'macOS'
        run: |
          brew install create-dmg
          mkdir -p output
          rm -f output/CyPyTest.dmg
          ls -la 
          ls -la package
          create-dmg --volname "CyPyTest" --dmg-title "CyPyTest" \
            --app-drop-link 600 185 dist/cy_py_test.app output/

      - name: Upload installer artifacts
        uses: actions/upload-artifact@v4
        with:
          name: installer-${{ matrix.os }}
          path: |
            dist/*.exe
            output/*.dmg

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: |
            dist/*.exe
            output/*.dmg