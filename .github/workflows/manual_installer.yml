name: Build Installers (Manual Trigger)

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'Git ref (branch, tag, commit SHA) to build installers from'
        required: true
        default: main
jobs:
  build_installers:
    #needs: build_and_publish
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
        python-version: [ "3.11" ]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 0

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install app from TestPyPI
        run: |
          pip install --upgrade pip
          pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ cy_py_test

      - name: Install PyInstaller
        run: pip install pyinstaller

#      - name: Clean previous builds
#        run: rm -rf build dist

      - name: Build executable with PyInstaller
        run: |
          cd packages
          pyinstaller --clean cy_py_test.spec

      - name: Windows installer (NSIS)
        if: runner.os == 'Windows'
        run: |
          choco install nsis -y
          makensis packages/installer.nsi

      - name: macOS installer (DMG)
        if: runner.os == 'macOS'
        run: |
          brew install create-dmg
          mkdir -p output
          rm -f output/CyPyTest.dmg
          create-dmg --volname "CyPyTest" \
            --app-drop-link 600 185 dist/cy_py_test.app output/

      - name: Upload installer artifacts
        uses: actions/upload-artifact@v4
        with:
          name: installer-${{ matrix.os }}
          path: |
            dist/*.exe
            output/*.dmg

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: |
            dist/*.exe
            output/*.dmg